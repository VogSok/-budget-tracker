name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential libffi-dev libssl-dev zlib1g-dev
        sudo apt install -y openjdk-8-jdk
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV
        
    - name: Install Android SDK tools
      run: |
        cd $HOME
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip -O android-sdk-tools.zip
        unzip android-sdk-tools.zip -d android-sdk
        mkdir -p android-sdk/cmdline-tools/latest
        mv android-sdk/cmdline-tools/* android-sdk/cmdline-tools/latest/ 2>/dev/null || true
        export ANDROID_HOME=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools" >> $GITHUB_ENV
        
    - name: Accept Android licenses
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        mkdir -p $HOME/.android
        touch $HOME/.android/repositories.cfg
        yes | sdkmanager --sdk_root=$ANDROID_HOME --licenses || true
        # Принудительно создаем файл с принятием лицензий
        echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/.android/agreed-to-android-sdk-license
        echo -e "84831b9409646a918e30573bab4c9c91346d8abd" >> $HOME/.android/agreed-to-android-sdk-license
        
    - name: Install required Android components
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-30" "build-tools;30.0.3" || true
        sdkmanager --sdk_root=$ANDROID_HOME --licenses || true
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython
        
    - name: Setup buildozer
      run: |
        # Создаем минимальный buildozer.spec если его нет
        if [ ! -f buildozer.spec ]; then
          echo "[app]
title = Бюджетный Трекер
package.name = budgettracker
package.domain = org.budget
source.dir = .
source.include_exts = py,png,jpg,kv,atlas,json,txt
version = 0.1
requirements = python3,kivy
orientation = portrait
fullscreen = 0
[buildozer]
log_level = 2" > buildozer.spec
        fi
        
    - name: Build APK
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        echo "Using ANDROID_HOME: $ANDROID_HOME"
        echo "Using JAVA_HOME: $JAVA_HOME"
        ls -la $ANDROID_HOME/cmdline-tools/latest/bin/ || echo "No cmdline-tools found"
        buildozer android debug
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: budget-tracker-apk
        path: bin/*.apk
        if-no-files-found: error
